[{"path":"/articles/Spatial_RNA.html","id":"apply-condecon-to-spatial-transcriptomic-data","dir":"Articles","previous_headings":"","what":"Apply ConDecon to Spatial Transcriptomic data","title":"Applying ConDecon to spatial transcriptomic data","text":"ConDecon’s general approach estimating cell abundances can applied omics data modalities spatial transcriptomics. tutorial, apply ConDecon stereo-seq single-cell RNA-seq data 10 zebrafish embryos profiled 3.3 hours post-fertilization (Lui et al, Developmental Cell, 2022). convenience, data associated tutorial available Zenodo. reference dataset, use single-cell RNA-seq data embryos 3.3 hpf study used diffusion pseudotime parameterize differentiation blastomere cells data. start loading single-cell RNA-seq count meta data.  interested using ConDecon deconvolve pixel tissue section profiled stereo-seq. reduce computational time necessary run tutorial, included stereo-seq data associated one tissue section Zenodo.  can now use ConDecon deconvolve spot-based spatial transcriptomic data using single-cell RNA-seq data reference.","code":"library(ConDecon) library(ggplot2) library(gridExtra) scRNA_count <- readRDS(\"../scRNA_count.Rds\") scRNA_PCA <- readRDS(\"../scRNA_PCA.Rds\") scRNA_var_genes <- readRDS(\"../scRNA_var_genes.Rds\") scRNA_meta_data <- readRDS(\"../scRNA_meta_data.Rds\") # Visualize the cell type annotations and predicted pseudotime of the single-cell RNA-seq data p1 <- ggplot(scRNA_meta_data, aes(UMAP1, UMAP2, color = clusters)) +    geom_point(size = 0.75) + theme_classic() p2 <- ggplot(scRNA_meta_data, aes(UMAP1, UMAP2, color = dpt_pseudotime)) +    geom_point(size = 0.75) + scale_color_viridis_c(option = \"plasma\") + theme_classic() grid.arrange(p1, p2, ncol=2) stereoseq_slice1_RNA_data <- readRDS(\"../stereoseq_slice1_RNA_data.Rds\") stereoseq_meta_data <- readRDS(\"../stereoseq_meta_data.Rds\") # Visualize the cell type annotations of the stereo-seq data from 1 tissue section ggplot(stereoseq_meta_data, aes(spatial_x, spatial_y, color = bin_annotation)) +    geom_point() + theme_linedraw() startTime <- Sys.time()  ConDecon_obj <- RunConDecon(counts = scRNA_count,                              latent = scRNA_PCA,                              variable.features = scRNA_var_genes,                              bulk = stereoseq_slice1_RNA_data,                              max.cent = 1)  endTime <- Sys.time() print(endTime - startTime) # Time difference of 4.49636 mins # Let's visualize the cell abundance distribution of 3 example spots ConDecon_obj = PlotConDecon(ConDecon_obj, umap = scRNA_meta_data[, c(\"UMAP1\", \"UMAP2\")],                              samples = c(\"DNB_3795_15810\", \"DNB_3945_15525\", \"DNB_4080_15600\")) # Identify the location of these spots on the tissue section ggplot(stereoseq_meta_data, aes(spatial_x, spatial_y, color = three_examples)) +    geom_point() + theme_linedraw()"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rachael Aubin. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aubin R (2023). ConDecon: Continuous Deconvolution Bulk Data using Single-Cell Data Reference. R package version 0.0.0.9000.","code":"@Manual{,   title = {ConDecon: Continuous Deconvolution of Bulk Data using Single-Cell Data as a Reference},   author = {Rachael Aubin},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"condecon","dir":"","previous_headings":"","what":"Continuous Deconvolution of Bulk Data using Single-Cell Data as a Reference","title":"Continuous Deconvolution of Bulk Data using Single-Cell Data as a Reference","text":"ConDecon clustering-independent deconvolution method estimating cell abundances bulk tissues using single-cell RNA-seq data. aim ConDecon infer probability distribution across reference single-cell RNA-seq data represents likelihood cell reference data present query bulk tissue. end, ConDecon requires three inputs: Single-cell gene expression count data Single-cell latent space Normalized bulk data information, ConDecon learns relationship explains similarity gene expression profile bulk single-cell data function changes cell abundances, without relying cluster labels cell-type specific gene expression signatures step. ConDecon enables previously elusive analyses dynamic cellular processes bulk tissues represents increase functionality phenotypic resolution respect current methods gene expression deconvolution. Additionally, ConDecon can applied omics data modalities including spatial transcriptomics chromatin accessibility data. Overall, anticipate features improve understanding tissue cell composition facilitating inference cell state abundances within complex bulk tissues, particularly context evolving systems like development disease progression. Aubin, R. G., Montelongo, J., Hu, R., Camara, P. G. Clustering-independent estimation cell abundances bulk tissue using single-cell RNA-seq. data. preperation (2023).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Continuous Deconvolution of Bulk Data using Single-Cell Data as a Reference","text":"","code":"devtools::install_github(\"CamaraLab/ConDecon\") library(ConDecon)"},{"path":"/index.html","id":"tutorials","dir":"","previous_headings":"","what":"Tutorials","title":"Continuous Deconvolution of Bulk Data using Single-Cell Data as a Reference","text":"Tutorial running ConDecon simulated bulk single-cell RNA-seq data: Quick set example","code":""},{"path":"/reference/BuildModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a regression model — BuildModel","title":"Fit a regression model — BuildModel","text":"Learn model maps space cell abundances correlations","code":""},{"path":"/reference/BuildModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a regression model — BuildModel","text":"","code":"BuildModel(output, degree = 1)"},{"path":"/reference/BuildModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a regression model — BuildModel","text":"output ConDecon object low dimensional embedding distributions cell abundances correlations degree degree polynomial regression model (default = 1)","code":""},{"path":"/reference/BuildModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a regression model — BuildModel","text":"ConDecon object fit model","code":""},{"path":"/reference/BuildModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a regression model — BuildModel","text":"","code":"data(counts_gps) data(latent_gps) data(variable_genes_gps) data(bulk_gps)  TrainingSet = BuildTrainingSet(count = counts_gps, latent = latent_gps) ConDecon_obj = Map2Latent(output = TrainingSet, latent = latent_gps, count = counts_gps, bulk = bulk_gps, variable.features = variable_genes_gps)  ConDecon_obj = BuildModel(ConDecon_obj)"},{"path":"/reference/BuildTrainingSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Build the training dataset — BuildTrainingSet","title":"Build the training dataset — BuildTrainingSet","text":"Use Gaussian mixture model (random parameters) generate traning dataset reference single-cell data","code":""},{"path":"/reference/BuildTrainingSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build the training dataset — BuildTrainingSet","text":"","code":"BuildTrainingSet(   count,   latent,   max.iter = 10000,   max.cent = 5,   step = 10000,   dims = ncol(latent),   min.cent = 1,   n = round(ncol(count)/2),   sigma_min_cells = NULL,   sigma_max_cells = NULL,   verbose = FALSE )"},{"path":"/reference/BuildTrainingSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build the training dataset — BuildTrainingSet","text":"count single-cell count matrix (features x cells) latent matrix single-cell latent space (cells x dims) max.iter size training dataset (default = 10,000) max.cent max number centers Gaussian (default = 5) step manually parallelize building training dataset dims number dimensions latent (default = ncol(latent)) min.cent min number centers Gaussian (default = 1) n number cells chosen create training dataset (default half number cells count matrix) sigma_min_cells min number cells captured standard deviation Gaussian sigma_max_cells max number cells captured standard deviation Gaussian verbose logical indicating whether print progress (default = TRUE)","code":""},{"path":"/reference/BuildTrainingSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build the training dataset — BuildTrainingSet","text":"ConDecon object training data","code":""},{"path":"/reference/BuildTrainingSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build the training dataset — BuildTrainingSet","text":"","code":"data(counts_gps) data(latent_gps)  TrainingSet = BuildTrainingSet(count = counts_gps, latent = latent_gps)"},{"path":"/reference/BulkCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate cells in bulk data based on the Gaussian kernal — BulkCells","title":"Aggregate cells in bulk data based on the Gaussian kernal — BulkCells","text":"Aggregate cells bulk data based Gaussian kernal","code":""},{"path":"/reference/BulkCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate cells in bulk data based on the Gaussian kernal — BulkCells","text":"","code":"BulkCells(pick.cells, max.iter, step, max.cent, tot.cells, n, count, verbose)"},{"path":"/reference/BulkCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate cells in bulk data based on the Gaussian kernal — BulkCells","text":"pick.cells Matrix cells selected bulk sample max.iter Size training data step Manual threading; number calculations simultaneously max.cent Maximum number Gaussian centers tot.cells Number cells select aggregate simulated bulk sample n Total number cells single-cell data count Matrix single-cell count data verbose Whether print (verbose = FALSE)","code":""},{"path":"/reference/BulkCells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate cells in bulk data based on the Gaussian kernal — BulkCells","text":"Matrix simulated bulk data","code":""},{"path":"/reference/BulkCells_subfxn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample cells — BulkCells_subfxn","title":"Sample cells — BulkCells_subfxn","text":"Sample cells","code":""},{"path":"/reference/BulkCells_subfxn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample cells — BulkCells_subfxn","text":"","code":"BulkCells_subfxn(i, cell.prob, max.cent, tot.cells, n)"},{"path":"/reference/BulkCells_subfxn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample cells — BulkCells_subfxn","text":"Indicator cell probability distribution cell.prob Cell probability distributions (matrix) max.cent Maxiumum number centers tot.cells Number cells select aggregate simulated bulk sample n Total number cells single-cell data","code":""},{"path":"/reference/BulkCells_subfxn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample cells — BulkCells_subfxn","text":"Cells selected bulk sample","code":""},{"path":"/reference/CellProb.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cell probability — CellProb","title":"Calculate cell probability — CellProb","text":"Calculate probability cell based Gaussian distribution","code":""},{"path":"/reference/CellProb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cell probability — CellProb","text":"","code":"CellProb(parameters, latent_distance, max.cent)"},{"path":"/reference/CellProb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cell probability — CellProb","text":"parameters Parameters Gaussian dist latent_distance Pairwise distance matrix cell latent space max.cent Maximum number Gaussian centers","code":""},{"path":"/reference/CellProb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cell probability — CellProb","text":"Numeric vector assigned prob cell","code":""},{"path":"/reference/CorBulk.html","id":null,"dir":"Reference","previous_headings":"","what":"CorBulk — CorBulk","title":"CorBulk — CorBulk","text":"CorBulk","code":""},{"path":"/reference/CorBulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CorBulk — CorBulk","text":"","code":"CorBulk(bulk, genes, gene.index)"},{"path":"/reference/CorBulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CorBulk — CorBulk","text":"bulk Matrix query bulk data (features x samples) genes Character vector variable features single-cell data gene.index Numeric vector gene rank","code":""},{"path":"/reference/CorBulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CorBulk — CorBulk","text":"Matrix rank correlation bulk sample","code":""},{"path":"/reference/Find_Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Find sigma — Find_Sigma","title":"Find sigma — Find_Sigma","text":"Find sigma","code":""},{"path":"/reference/Find_Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find sigma — Find_Sigma","text":"","code":"Find_Sigma(sigma, x_i, width)"},{"path":"/reference/Find_Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find sigma — Find_Sigma","text":"sigma variable x_i range sigma values width standard deviation Gaussian","code":""},{"path":"/reference/Find_Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find sigma — Find_Sigma","text":"Sigma value","code":""},{"path":"/reference/GeneIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"GeneIndex — GeneIndex","title":"GeneIndex — GeneIndex","text":"GeneIndex","code":""},{"path":"/reference/GeneIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GeneIndex — GeneIndex","text":"","code":"GeneIndex(knn, count, variable.features)"},{"path":"/reference/GeneIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GeneIndex — GeneIndex","text":"knn Matrix cells nearest neighbor count Matrix single-cell count data variable.features Character vector variable features single-cell data","code":""},{"path":"/reference/GeneIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GeneIndex — GeneIndex","text":"Matrix rank indices variable features ordered expression","code":""},{"path":"/reference/GeneIndex_subfxn.html","id":null,"dir":"Reference","previous_headings":"","what":"GeneIndex_subfxn — GeneIndex_subfxn","title":"GeneIndex_subfxn — GeneIndex_subfxn","text":"GeneIndex_subfxn","code":""},{"path":"/reference/GeneIndex_subfxn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GeneIndex_subfxn — GeneIndex_subfxn","text":"","code":"GeneIndex_subfxn(i, geneID)"},{"path":"/reference/GeneIndex_subfxn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GeneIndex_subfxn — GeneIndex_subfxn","text":"Bulk sample geneID Vector index variable features","code":""},{"path":"/reference/GeneIndex_subfxn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GeneIndex_subfxn — GeneIndex_subfxn","text":"Numeric vector gene rank","code":""},{"path":"/reference/Map2Latent.html","id":null,"dir":"Reference","previous_headings":"","what":"Map2Latent — Map2Latent","title":"Map2Latent — Map2Latent","text":"Use latent space expand distributions cell abundances correlations basis functions","code":""},{"path":"/reference/Map2Latent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map2Latent — Map2Latent","text":"","code":"Map2Latent(output, latent, count, bulk, variable.features)"},{"path":"/reference/Map2Latent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map2Latent — Map2Latent","text":"output Training set object latent matrix single-cell latent space (cells x dims) count single-cell count matrix (features x cells) bulk matrix query bulk data (features x samples) variable.features character vector variable features","code":""},{"path":"/reference/Map2Latent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map2Latent — Map2Latent","text":"ConDecon object low dimensional embedding space cell abundances correlations","code":""},{"path":"/reference/Map2Latent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map2Latent — Map2Latent","text":"","code":"data(counts_gps) data(latent_gps) data(bulk_gps) data(variable_genes_gps)  TrainingSet = BuildTrainingSet(count = counts_gps, latent = latent_gps)  ConDecon_obj = Map2Latent(output = TrainingSet, latent = latent_gps, count = counts_gps, bulk = bulk_gps, variable.features = variable_genes_gps)"},{"path":"/reference/MultiVarFit.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiVarFit — MultiVarFit","title":"MultiVarFit — MultiVarFit","text":"MultiVarFit","code":""},{"path":"/reference/MultiVarFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiVarFit — MultiVarFit","text":"","code":"MultiVarFit(i, cell.prob.coef, bulk.coef, degree, dims)"},{"path":"/reference/MultiVarFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiVarFit — MultiVarFit","text":"current dimension cell.prob.coef fit model coefficients space cell abundances bulk.coef fit model coefficients space rank correlations degree degree polynomial dims total number dimensions latent space","code":""},{"path":"/reference/MultiVarFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiVarFit — MultiVarFit","text":"model stats::lm","code":""},{"path":"/reference/PickCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick cells based on the Gaussian kernal — PickCells","title":"Pick cells based on the Gaussian kernal — PickCells","text":"Pick cells based Gaussian kernal","code":""},{"path":"/reference/PickCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick cells based on the Gaussian kernal — PickCells","text":"","code":"PickCells(max.iter, step, cell.prob, max.cent, tot.cells, n, verbose)"},{"path":"/reference/PickCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick cells based on the Gaussian kernal — PickCells","text":"max.iter Size training data step Manual threading; number calculations simultaneously cell.prob Cell probability distributions (matrix) max.cent Maximum number Gaussian centers tot.cells Number cells select aggregate simulated bulk sample n Total number cells single-cell data verbose Whether print (verbose = FALSE)","code":""},{"path":"/reference/PickCells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick cells based on the Gaussian kernal — PickCells","text":"Matrix cells selected bulk sample","code":""},{"path":"/reference/PlotConDecon.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ConDecon_obj — PlotConDecon","title":"Plot ConDecon_obj — PlotConDecon","text":"Calculate plot cell probability z-score cell bulk sample. Cell probability z-score associated query sample_i: z-score_i = [ConDecon_obj$norm_cell.prob[,] - rowMeans(ConDecon_obj$norm_cell.prob)] / RowSds(ConDecon_obj$norm_cell.prob)","code":""},{"path":"/reference/PlotConDecon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ConDecon_obj — PlotConDecon","text":"","code":"PlotConDecon(   ConDecon_obj,   umap = ConDecon_obj$TrainingSet$latent[, 1:2],   samples = NULL,   pt.size = 1,   rm_outliers = FALSE,   cells = NULL,   title_names = NULL )"},{"path":"/reference/PlotConDecon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ConDecon_obj — PlotConDecon","text":"ConDecon_obj ConDecon object (output RunConDecon) umap 2-dimensional coordinates reference single-cell data (default = first 2 dimensions latent space) samples character vector name(s) query bulk sample(s) plot; relative probability still calculated sample(s) (default = NULL) pt.size size points plotted (default = 1) rm_outliers Boolean indicating whether remove outlier cell probability values z-score calculation based +- 1.5*IQR (default = FALSE) cells vector cell names/index indicating cells reference single-cell data plot (default = NULL, plot cells) title_names title plot (default = NULL, use bulk sample names ConDecon object)","code":""},{"path":"/reference/PlotConDecon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ConDecon_obj — PlotConDecon","text":"Plot z-score cell probability values query bulk sample","code":""},{"path":"/reference/PlotConDecon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ConDecon_obj — PlotConDecon","text":"","code":"data(counts_gps) data(latent_gps) data(bulk_gps) data(variable_genes_gps)  ConDecon_obj = RunConDecon(counts = counts_gps, latent = latent_gps, bulk = bulk_gps, variable.features = variable_genes_gps)  # add z-score cell abundances to ConDecon object: ConDecon$relative_cell.prob ConDecon_obj = PlotConDecon(ConDecon_obj)       # Plot the z-score cell abundances for the query bulk sample(s) PlotConDecon(ConDecon_obj)"},{"path":"/reference/PredictCellProb.html","id":null,"dir":"Reference","previous_headings":"","what":"PredictCellProb — PredictCellProb","title":"PredictCellProb — PredictCellProb","text":"Using fit model, predict cell abundance distributions","code":""},{"path":"/reference/PredictCellProb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictCellProb — PredictCellProb","text":"","code":"PredictCellProb(bulk, count, variable.features, output)"},{"path":"/reference/PredictCellProb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictCellProb — PredictCellProb","text":"bulk matrix query bulk data (features x samples) count single-cell count matrix (features x cells) variable.features character vector variable features output ConDecon object fit model","code":""},{"path":"/reference/PredictCellProb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PredictCellProb — PredictCellProb","text":"ConDecon object inferred cell probabilities query bulk sample","code":""},{"path":"/reference/PredictCellProb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PredictCellProb — PredictCellProb","text":"","code":"data(counts_gps) data(variable_genes_gps) data(bulk_gps)  TrainingSet = BuildTrainingSet(count = counts_gps, latent = latent_gps) ConDecon_obj = Map2Latent(output = TrainingSet, latent = latent_gps, count = counts_gps, bulk = bulk_gps, variable.features = variable_genes_gps) ConDecon_obj = BuildModel(ConDecon_obj)  ConDecon_obj = PredictCellProb(bulk = bulk_gps, count = counts_gps, variable.features = variable_genes_gps, output = ConDecon_obj)"},{"path":"/reference/RunConDecon.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ConDecon — RunConDecon","title":"Run ConDecon — RunConDecon","text":"Run ConDecon (continuous deconvolution) estimate cell abundances associated query bulk sample","code":""},{"path":"/reference/RunConDecon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ConDecon — RunConDecon","text":"","code":"RunConDecon(   counts,   latent,   bulk,   variable.features,   max.iter = 5000,   max.cent = 5,   dims = 10,   degree = 1,   step = ifelse(max.iter <= 10000, max.iter, 10000),   min.cent = 1,   n = round(ncol(counts)/2),   trainingset = NULL,   sigma_min_cells = NULL,   sigma_max_cells = NULL,   verbose = FALSE )"},{"path":"/reference/RunConDecon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run ConDecon — RunConDecon","text":"counts single-cell counts matrix (features x cells) latent matrix single-cell latent space (cells x dims) bulk matrix query bulk data (features x samples) variable.features character vector variable features max.iter size training dataset (default = 5,000) max.cent max number centers Gaussian (default = 5) dims number dimensions latent (default = 10) degree degree polynomial used step manually parallelize building training dataset min.cent min number centers Gaussian (default = 1) n number cells chosen create training dataset (default half number cells counts matrix) trainingset pre-generated training dataset sigma_min_cells min number cells captured standard deviation Gaussian sigma_max_cells max number cells captured standard deviation Gaussian verbose logical indicating whether print progress (default = FALSE)","code":""},{"path":"/reference/RunConDecon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ConDecon — RunConDecon","text":"ConDecon object continuous deconvolution results","code":""},{"path":"/reference/RunConDecon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run ConDecon — RunConDecon","text":"","code":"data(counts_gps) data(latent_gps) data(bulk_gps) data(variable_genes_gps)  ConDecon_obj = RunConDecon(counts = counts_gps, latent = latent_gps, bulk = bulk_gps, variable.features = variable_genes_gps)"},{"path":"/reference/bulk_gps.html","id":null,"dir":"Reference","previous_headings":"","what":"Example bulk data — bulk_gps","title":"Example bulk data — bulk_gps","text":"Example bulk gene expression data generated aggregating cells counts_gps single-cell data.","code":""},{"path":"/reference/bulk_gps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example bulk data — bulk_gps","text":"","code":"bulk_gps"},{"path":"/reference/bulk_gps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example bulk data — bulk_gps","text":"matrix 5,000 rows (genes) 5 columns (bulk samples)","code":""},{"path":"/reference/bulk_gps.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example bulk data — bulk_gps","text":"Simulated bulk data generated aggregating cell types/groups (gps) counts_gps","code":""},{"path":"/reference/bulk_gps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example bulk data — bulk_gps","text":"","code":"data(bulk_gps)"},{"path":"/reference/cell_gps.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell type cluster IDs — cell_gps","title":"Cell type cluster IDs — cell_gps","text":"Cell type cluster IDs counts_gps single-cell data.","code":""},{"path":"/reference/cell_gps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell type cluster IDs — cell_gps","text":"","code":"cell_gps"},{"path":"/reference/cell_gps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cell type cluster IDs — cell_gps","text":"character vector 500 cluster IDs","code":""},{"path":"/reference/cell_gps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell type cluster IDs — cell_gps","text":"","code":"data(cell_gps)"},{"path":"/reference/counts_gps.html","id":null,"dir":"Reference","previous_headings":"","what":"Example single-cell counts data — counts_gps","title":"Example single-cell counts data — counts_gps","text":"Example single-cell gene expression counts data containing 9 discrete cell types/groups (gps) generated Splatter.","code":""},{"path":"/reference/counts_gps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example single-cell counts data — counts_gps","text":"","code":"counts_gps"},{"path":"/reference/counts_gps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example single-cell counts data — counts_gps","text":"matrix 5,000 rows (genes) 500 columns (cells):","code":""},{"path":"/reference/counts_gps.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example single-cell counts data — counts_gps","text":"Simulated single-cell data generated Splatter https://doi.org/10.1186/s13059-017-1305-0","code":""},{"path":"/reference/counts_gps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example single-cell counts data — counts_gps","text":"","code":"data(counts_gps)"},{"path":"/reference/latent_gps.html","id":null,"dir":"Reference","previous_headings":"","what":"Example PCA latent space — latent_gps","title":"Example PCA latent space — latent_gps","text":"Example PCA latent space associated counts_gps single-cell data.","code":""},{"path":"/reference/latent_gps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example PCA latent space — latent_gps","text":"","code":"latent_gps"},{"path":"/reference/latent_gps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example PCA latent space — latent_gps","text":"matrix 500 rows (cells) 50 columns (principal components)","code":""},{"path":"/reference/latent_gps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example PCA latent space — latent_gps","text":"","code":"data(latent_gps)"},{"path":"/reference/true_prop_gps.html","id":null,"dir":"Reference","previous_headings":"","what":"True cell type proportions — true_prop_gps","title":"True cell type proportions — true_prop_gps","text":"True cell type proportions associated bulk_gps bulk data.","code":""},{"path":"/reference/true_prop_gps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"True cell type proportions — true_prop_gps","text":"","code":"true_prop_gps"},{"path":"/reference/true_prop_gps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"True cell type proportions — true_prop_gps","text":"matrix 5 rows (5 bulk samples) 9 columns (number cell types)","code":""},{"path":"/reference/true_prop_gps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"True cell type proportions — true_prop_gps","text":"","code":"data(true_prop_gps)"},{"path":"/reference/umap_embedding_gps.html","id":null,"dir":"Reference","previous_headings":"","what":"Example UMAP 2D embedding — umap_embedding_gps","title":"Example UMAP 2D embedding — umap_embedding_gps","text":"Example UMAP 2D embedding latent space (latent_gps).","code":""},{"path":"/reference/umap_embedding_gps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example UMAP 2D embedding — umap_embedding_gps","text":"","code":"umap_embedding_gps"},{"path":"/reference/umap_embedding_gps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example UMAP 2D embedding — umap_embedding_gps","text":"matrix 500 rows (cells) 2 columns (UMAP)","code":""},{"path":"/reference/umap_embedding_gps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example UMAP 2D embedding — umap_embedding_gps","text":"","code":"data(umap_embedding_gps)"},{"path":"/reference/variable_genes_gps.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable genes — variable_genes_gps","title":"Variable genes — variable_genes_gps","text":"2,000 variable genes associated counts_gps single-cell data.","code":""},{"path":"/reference/variable_genes_gps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable genes — variable_genes_gps","text":"","code":"variable_genes_gps"},{"path":"/reference/variable_genes_gps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Variable genes — variable_genes_gps","text":"character vector containing 2,000 variable genes","code":""},{"path":"/reference/variable_genes_gps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variable genes — variable_genes_gps","text":"","code":"data(variable_genes_gps)"}]
