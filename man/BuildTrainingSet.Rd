% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BuildTrainingSet_functions.R
\name{BuildTrainingSet}
\alias{BuildTrainingSet}
\title{Build the training dataset}
\usage{
BuildTrainingSet(
  count,
  latent,
  max.iter = 5000,
  max.cent = 5,
  step = ifelse(max.iter <= 10000, max.iter, 10000),
  dims = 10,
  min.cent = 1,
  n = round(ncol(count)/2),
  sigma_min_cells = NULL,
  sigma_max_cells = NULL,
  verbose = FALSE
)
}
\arguments{
\item{count}{single-cell count matrix (features x cells)}

\item{latent}{matrix of single-cell latent space (cells x dims)}

\item{max.iter}{size of the training dataset (default = 10,000)}

\item{max.cent}{max number of centers in the Gaussian (default = 5)}

\item{step}{manually parallelize building the training dataset}

\item{dims}{number of dimensions from latent (default = ncol(latent))}

\item{min.cent}{min number of centers in the Gaussian (default = 1)}

\item{n}{number of cells to be chosen to create the training dataset (default
is half the number of cells in the count matrix)}

\item{sigma_min_cells}{min number of cells that should be captured by the standard
deviation of the Gaussian}

\item{sigma_max_cells}{max number of cells that should be captured by the standard
deviation of the Gaussian}

\item{verbose}{logical indicating whether to print progress (default = TRUE)}
}
\value{
ConDecon object with training data
}
\description{
Use a Gaussian mixture model (with random parameters)
to generate a traning dataset from the reference single-cell data
}
\examples{
data(counts_gps)
data(latent_gps)

# For this example, we will reduce the training size to max.iter = 50 to reduce run time
TrainingSet = BuildTrainingSet(count = counts_gps, latent = latent_gps, max.iter = 50)
}
