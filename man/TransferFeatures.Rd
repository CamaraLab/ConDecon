% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TransferFeatures.R
\name{TransferFeatures}
\alias{TransferFeatures}
\title{TransferFeatures}
\usage{
TransferFeatures(
  ConDecon_obj,
  feature,
  feature_name = deparse(substitute(feature)),
  probs = 0.75
)
}
\arguments{
\item{ConDecon_obj}{ConDecon object (output from RunConDecon)}

\item{feature}{Numeric vector with support on the single-cell latent space (eg pseudotime, gene expression, etc)}

\item{feature_name}{String indicating the name where the transferred feature will be stored within the ConDecon object (default = the object name input into feature)}

\item{probs}{Numeric value indicating the bottom quartile of the distribution that should be removed for the purpose of smoothing long tails of the predicted cell probability distribuiton (default = 0.75)}
}
\value{
ConDecon object with a matrix called 'TransferFeatures' containing the transferred feature (rows) for each bulk sample (column)
}
\description{
Using ConDecon's predicted cell probability distributions, transfer a numeric feature from the single-cell data to the bulk data
}
\examples{
data(counts_gps)
data(latent_gps)
data(bulk_gps)
data(variable_genes_gps)

# For this example, we will reduce the training size to max.iter = 50 to reduce run time
ConDecon_obj = RunConDecon(counts = counts_gps, latent = latent_gps, bulk = bulk_gps,
variable.features = variable_genes_gps, max.iter = 50)

# Transfer feature to ConDecon object: ConDecon_obj$TransferFeatures[feature_name,]
# For this example, randomly selected gene from the count matrix to transfer
random_gene = counts_gps[sample(x = 1:nrow(counts_gps), size = 1),]
ConDecon_obj = TransferFeatures(ConDecon_obj = ConDecon_obj, feature = random_gene)
}
